<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= title %>'s Profile Form
    </title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>

<body class="min-h-screen bg-teal-100 flex flex-col">
    <!-- Header -->
    <header class="bg-teal-600 text-white p-4 shadow-md">
        <div class="container mx-auto flex justify-between items-center">
            <h1 class="text-2xl font-bold">Krish's Profile Builder</h1>
            <nav>
                <a href="#form" class="hover:text-teal-200 transition-colors duration-300 route-link mr-4"
                    data-route="form">Form</a>
                <a href="#history" class="hover:text-teal-200 transition-colors duration-300 route-link"
                    data-route="history">Submission History</a>
            </nav>
        </div>
    </header>

    <!-- Main Content -->
    <main class="flex-grow container mx-auto p-4 flex items-center justify-center">
        <!-- Form Section -->
        <section id="form-section" class="route-section">
            <form action="/process" method="POST" onsubmit="return validateForm()"
                class="bg-teal-200 p-6 rounded-lg shadow-lg min-w-[80vw] md:min-w-[40vw] space-y-4 transform hover:bg-teal-300 transition-colors duration-200">
                <h2 class="text-xl font-semibold text-center text-teal-800">Build Your Profile</h2>
                <% if (typeof errors !=='undefined' && errors.length> 0) { %>
                    <div class="text-red-500 text-sm">
                        <ul>
                            <% errors.forEach(function(error){ %>
                                <li>
                                    <%= error %>
                                </li>
                                <% }) %>
                        </ul>
                    </div>
                    <% } %>
                        <div>
                            <label for="username" class="block text-sm font-medium text-teal-700">Username</label>
                            <input type="text" id="username" name="username" placeholder="Your Username"
                                class="username w-full mt-1 p-2 rounded border border-teal-300 focus:ring focus:ring-teal-500"
                                value="<%= formData && formData.username ? formData.username : '' %>">
                        </div>
                        <div>
                            <label for="password" class="block text-sm font-medium text-teal-700">Password</label>
                            <input type="password" id="password" name="password" placeholder="Your Password"
                                class="password w-full mt-1 p-2 rounded border border-teal-300 focus:ring focus:ring-teal-500">
                            <p id="password-strength" class="text-sm text-teal-600 mt-1"></p>
                        </div>
                        <div>
                            <label for="college" class="block text-sm font-medium text-teal-700">College</label>
                            <input type="text" id="college" name="college" placeholder="Your College"
                                class="college w-full mt-1 p-2 rounded border border-teal-300 focus:ring focus:ring-teal-500"
                                value="<%= formData && formData.college ? formData.college : '' %>">
                        </div>
                        <div>
                            <label for="dept" class="block text-sm font-medium text-teal-700">Department</label>
                            <input type="text" id="dept" name="dept" placeholder="Your Department"
                                class="dept w-full mt-1 p-2 rounded border border-teal-300 focus:ring focus:ring-teal-500"
                                value="<%= formData && formData.dept ? formData.dept : '' %>">
                        </div>
                        <div>
                            <label for="year" class="block text-sm font-medium text-teal-700">Year of Study</label>
                            <select id="year" name="year"
                                class="year w-full mt-1 p-2 rounded border border-teal-300 focus:ring focus:ring-teal-500">
                                <option value="" disabled <%=!formData || !formData.year ? 'selected' : '' %>>Select
                                    Year</option>
                                <option value="1st" <%=formData && formData.year==='1st' ? 'selected' : '' %>>1st Year
                                </option>
                                <option value="2nd" <%=formData && formData.year==='2nd' ? 'selected' : '' %>>2nd Year
                                </option>
                                <option value="3rd" <%=formData && formData.year==='3rd' ? 'selected' : '' %>>3rd Year
                                </option>
                                <option value="4th" <%=formData && formData.year==='4th' ? 'selected' : '' %>>4th Year
                                </option>
                            </select>
                        </div>
                        <div>
                            <label for="hobby" class="block text-sm font-medium text-teal-700">Favorite Hobby</label>
                            <input type="text" id="hobby" name="hobby" placeholder="Your Favorite Hobby"
                                class="hobby w-full mt-1 p-2 rounded border border-teal-300 focus:ring focus:ring-teal-500"
                                value="<%= formData && formData.hobby ? formData.hobby : '' %>">
                            <p id="hobby-count" class="text-sm text-teal-600 mt-1">Characters: 0</p>
                        </div>
                        <button type="submit"
                            class="w-full bg-teal-600 text-white p-2 rounded hover:bg-teal-700 transition-colors duration-300 animate-pulse">Submit
                            Profile</button>
            </form>
        </section>

        <!-- History Section -->
        <section id="history-section" class="route-section hidden">
            <div class="bg-teal-200 p-6 rounded-lg shadow-lg w-full max-w-md space-y-4">
                <div class="flex justify-between gap-4">
                    <h2 class="text-xl font-semibold text-center text-teal-800">Submission History</h2>
                    <button
                        class="bg-teal-600 text-white p-2 rounded hover:bg-teal-700 transition-colors duration-300 history-clear">clear
                        history</button>
                </div>
                <div id="history-list" class="space-y-2"></div>
                <a href="#form"
                    class="inline-block bg-teal-600 text-white p-2 rounded hover:bg-teal-700 transition-colors duration-300 route-link"
                    data-route="form">Back to Form</a>
            </div>
        </section>
    </main>

    <!-- Footer -->
    <footer class="bg-teal-600 text-white p-4 text-center">
        <p>&copy; 2025 Krish Shah | Built for Cognifyz Technologies</p>
    </footer>

    <script>
        // Client-side routing
        const sections = document.querySelectorAll('.route-section');
        const links = document.querySelectorAll('.route-link');

        function showSection(route) {
            sections.forEach(section => section.classList.add('hidden'));
            document.getElementById(`${route}-section`).classList.remove('hidden');
        }

        links.forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                const route = link.getAttribute('data-route');
                showSection(route);
                window.history.pushState({}, '', `#${route}`);
            });
        });

        // Handle browser back/forward
        window.addEventListener('popstate', () => {
            const route = window.location.hash.slice(1) || 'form';
            showSection(route);
        });

        // Initial route
        const initialRoute = window.location.hash.slice(1) || 'form';
        showSection(initialRoute);

        // Fetch submission history
        async function loadHistory() {
            const response = await fetch('/history');
            const submissions = await response.json();
            const historyList = document.getElementById('history-list');
            historyList.innerHTML = '';
            if (submissions.length === 0) {
                historyList.innerHTML = '<p class="text-teal-700">No submissions yet.</p>';
            } else {
                submissions.forEach(sub => {
                    const div = document.createElement('div');
                    div.className = 'bg-teal-100 p-2 rounded';
                    div.innerHTML = `
                        <p><strong>${sub.username}</strong> (${sub.year} Year)</p>
                        <p>${sub.college}, ${sub.dept}</p>
                        <p>Hobby: ${sub.hobby}</p>
                        <p>Submitted: ${sub.date}</p>
                    `;
                    historyList.appendChild(div);
                });
            }
        }
        document.querySelector('.history-clear').addEventListener('click', async () => {
            await fetch('/history', { method: 'DELETE' });
            loadHistory();
        });

        // Load history when history section is shown
        links.forEach(link => {
            if (link.getAttribute('data-route') === 'history') {
                link.addEventListener('click', loadHistory);
            }
        });
        if (initialRoute === 'history') loadHistory();

        // Real-time DOM updates
        const passwordInput = document.querySelector('.password');
        const passwordStrength = document.getElementById('password-strength');
        const hobbyInput = document.querySelector('.hobby');
        const hobbyCount = document.getElementById('hobby-count');

        passwordInput.addEventListener('input', () => {
            const value = passwordInput.value;
            if (value.length === 0) {
                passwordStrength.textContent = '';
                passwordStrength.className = 'text-sm mt-1';
            } else if (value.length < 8) {
                passwordStrength.textContent = 'Weak: At least 8 characters needed';
                passwordStrength.className = 'text-sm text-red-500 mt-1';
            } else if (/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*]).{8,}$/.test(value)) {
                passwordStrength.textContent = 'Strong';
                passwordStrength.className = 'text-sm text-green-500 mt-1';
            } else {
                passwordStrength.textContent = 'Medium: Needs uppercase, number, and special character';
                passwordStrength.className = 'text-sm text-yellow-500 mt-1';
            }
        });

        hobbyInput.addEventListener('input', () => {
            const count = hobbyInput.value.length;
            hobbyCount.textContent = `Characters: ${count}`;
            hobbyCount.className = count > 50 ? 'text-sm text-red-500 mt-1' : 'text-sm text-teal-600 mt-1';
        });

        // Form validation
        function validateForm(event) {
            event.preventDefault();
            const username = document.querySelector('.username');
            const password = document.querySelector('.password');
            const college = document.querySelector('.college');
            const dept = document.querySelector('.dept');
            const year = document.querySelector('.year');
            const hobby = document.querySelector('.hobby');

            [username, password, college, dept, year, hobby].forEach(el => el.classList.remove('error'));

            if (!username.value.trim() || username.value.trim().length < 3) {
                alert('Username must be at least 3 characters.');
                username.classList.add('error');
                return false;
            }
            if (!password.value || !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*]).{8,}$/.test(password.value)) {
                alert('Password must be at least 8 characters with uppercase, lowercase, number, and special character.');
                password.classList.add('error');
                return false;
            }
            if (!college.value.trim() || !/^[A-Z][a-zA-Z\s]*$/.test(college.value.trim()) || /^\d+$/.test(college.value.trim())) {
                alert('College must start with a capital letter and contain only letters and spaces.');
                college.classList.add('error');
                return false;
            }
            const validDepts = ['Computer Science', 'Mechanical', 'Electrical', 'Civil', 'Chemical'];
            if (!dept.value.trim() || !validDepts.includes(dept.value.trim())) {
                alert(`Department must be one of: ${validDepts.join(', ')}`);
                dept.classList.add('error');
                return false;
            }
            if (!year.value) {
                alert('Please select your year of study.');
                year.classList.add('error');
                return false;
            }
            if (!hobby.value.trim() || hobby.value.length > 50) {
                alert('Hobby is required and must be 50 characters or less.');
                hobby.classList.add('error');
                return false;
            }
            return true;
        }
    </script>
    <style>
        .error {
            border: 1px solid red;
        }
    </style>
</body>

</html>